{
    "database": "postgres_air",
    "question": "How many passengers flew between Delhi and Tokyo direct versus with connections in 2024?",
    "query": "WITH booking_counts AS (\n    SELECT booking_id,\n           COUNT(*) AS leg_count,\n           MIN(leg_num) AS first_leg,\n           MAX(leg_num) AS last_leg\n    FROM postgres_air.booking_leg\n    GROUP BY booking_id\n), itineraries AS (\n    SELECT bc.booking_id,\n           CASE WHEN bc.leg_count = 1 THEN 'direct' ELSE 'connecting' END AS itinerary_type\n    FROM booking_counts bc\n    JOIN postgres_air.booking_leg bl_dep ON bc.booking_id = bl_dep.booking_id AND bc.first_leg = bl_dep.leg_num\n    JOIN postgres_air.flight f_dep ON bl_dep.flight_id = f_dep.flight_id\n    JOIN postgres_air.airport a_dep ON f_dep.departure_airport = a_dep.airport_code\n    JOIN postgres_air.booking_leg bl_arr ON bc.booking_id = bl_arr.booking_id AND bc.last_leg = bl_arr.leg_num\n    JOIN postgres_air.flight f_arr ON bl_arr.flight_id = f_arr.flight_id\n    JOIN postgres_air.airport a_arr ON f_arr.arrival_airport = a_arr.airport_code\n    WHERE a_dep.city = 'DELHI'\n      AND a_arr.city = 'TOKYO'\n      AND f_dep.scheduled_departure >= '2024-01-01'\n      AND f_dep.scheduled_departure < '2025-01-01'\n), passenger_bookings AS (\n    SELECT DISTINCT bp.passenger_id, bl.booking_id\n    FROM postgres_air.boarding_pass bp\n    JOIN postgres_air.booking_leg bl ON bp.booking_leg_id = bl.booking_leg_id\n)\nSELECT i.itinerary_type,\n       COUNT(DISTINCT pb.passenger_id) AS passenger_count\nFROM itineraries i\nJOIN passenger_bookings pb ON i.booking_id = pb.booking_id\nGROUP BY i.itinerary_type;\n"
}