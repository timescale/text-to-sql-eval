---
type: header
schema_version: '1'
...
---
schema: public
name: customers
type: table
description: Stores each customer along with their market segment and preferred currency.
columns:
- name: customerid
  description: Unique identifier for the customer.
- name: segment
  description: Business segment classification of the customer (e.g., SME, LAM).
- name: currency
  description: Currency code typically used by the customer.
...
---
schema: public
name: gasstations
type: table
description: Lists gas stations with their chain affiliation, country, and market
  segment category.
columns:
- name: gasstationid
  description: Unique identifier for the gas station.
- name: chainid
  description: Identifier of the chain to which the gas station belongs.
- name: country
  description: Country where the gas station is located.
- name: segment
  description: Positioning segment of the gas station, such as premium or value.
...
---
schema: public
name: products
type: table
description: Catalog of products sold, mapping a product ID to its description.
columns:
- name: productid
  description: Unique identifier for the product.
- name: description
  description: Textual description or name of the product.
...
---
schema: public
name: transactions_1k
type: table
description: Holds individual fuel purchase transactions including date/time, customer,
  station, product, amount and price.
columns:
- name: transactionid
  description: Unique identifier for each transaction.
- name: date
  description: Calendar date when the transaction occurred.
- name: time
  description: Time of day the transaction was made.
- name: customerid
  description: Identifier of the customer who made the purchase.
- name: cardid
  description: Identifier of the payment or loyalty card used.
- name: gasstationid
  description: Identifier of the gas station where the purchase occurred.
- name: productid
  description: Identifier of the product purchased during the transaction.
- name: amount
  description: Quantity of product purchased, likely in liters.
- name: price
  description: Total price paid for the transaction.
...
---
schema: public
name: yearmonth
type: table
description: Summarizes monthly fuel consumption per customer.
columns:
- name: customerid
  description: Identifier of the customer for the consumption summary.
- name: date
  description: Year-month key (YYYYMM) representing the period of the consumption
    summary.
- name: consumption
  description: Total fuel consumption for the customer during the specified month.
...
---
type: fact
description: Join with yearmonth table using customers.customerid = yearmonth.customerid for consumption data. Always use proper JOINs instead of subqueries with IN when combining customer and consumption data.
...
---
type: fact
description: Currency field values include 'CZK' and 'EUR' for Czech and Euro customers
...
---
type: fact
description: Segment field contains values like 'SME', 'LAM' for business classifications. For gas stations, segment includes 'Discount' among other values.
...
---
type: sql_example
sql: |
  SELECT CAST(SUM(CASE WHEN condition THEN CAST(field AS FLOAT) ELSE 0 END) AS REAL) * 100 / NULLIF(COUNT(*), 0)
  FROM table1 t1 
  JOIN table2 t2 ON t1.id = t2.id
  WHERE t1.filter_condition
description: Calculate percentages with proper JOINs and FLOAT casting. Use JOINs instead of subqueries for denominator calculations.
...
---
type: fact
description: |
  When questions specify yearmonth periods (like "June 2013" = "201306"), always join with yearmonth table and filter by yearmonth.date, not by transaction.date which has different format and meaning.
...
---
type: sql_example
sql: |
  SELECT SUM(CASE WHEN t1.field = 'value1' THEN CAST(t2.amount AS FLOAT) ELSE 0 END) - 
         SUM(CASE WHEN t1.field = 'value2' THEN CAST(t2.amount AS FLOAT) ELSE 0 END)
  FROM table1 t1
  JOIN table2 t2 ON t1.id = t2.id
  WHERE filter_condition
description: Calculate differences between groups using conditional SUM with CASE WHEN. Always cast numeric fields to FLOAT for calculations.
...
---
type: fact
description: "Country field uses country codes: 'CZE' for Czech Republic, 'SVK' for Slovakia"
...
---
type: sql_example
sql: |
  SELECT SUBSTR(date, 1, 4) AS year, SUBSTR(date, 5, 2) AS month
  FROM yearmonth
  WHERE SUBSTR(date, 1, 4) = '2013'
description: Extract year and month from yearmonth.date field using SUBSTR(). Date format is YYYYMM, so year is first 4 characters, month is characters 5-6.
...
---
type: sql_example
sql: |
  SELECT CAST(consumption AS FLOAT) 
  FROM yearmonth 
  WHERE calculation_needed
description: Always cast consumption to FLOAT when performing calculations as specified in questions. Use CAST(consumption AS FLOAT) or consumption::FLOAT.
...
---
type: sql_example
sql: |
  SELECT SUM(CAST(consumption AS FLOAT))
  FROM yearmonth 
  WHERE SUBSTR(date, 1, 4) = '2012'
  GROUP BY SUBSTR(date, 5, 2)
  ORDER BY SUM(consumption) DESC LIMIT 1
description: Find highest monthly consumption by grouping by month (SUBSTR(date, 5, 2)) and using SUM(), not MAX() of individual records.
...
---
type: fact
description: Segment field contains values like 'Discount' for gas station positioning
...
---
type: fact
description: Join with transactions_1k using gasstations.gasstationid = transactions_1k.gasstationid
...
---
type: fact
description: Date field uses standard date format (YYYY-MM-DD)
...
---
type: fact
description: Join with yearmonth table for monthly consumption filtering
...
---
type: fact
description: Join with customers, gasstations, and products for complete transaction details
...
---
type: fact
description: For percentage calculations, count customers who made transactions on specific dates
...
---
type: fact
description: Date field uses YYYYMM format (e.g., '201309' for September 2013)
...
---
type: fact
description: Extract year using SUBSTR(date, 1, 4) and month using SUBSTR(date, 5, 2)
...
---
type: fact
description: Always CAST consumption AS float for arithmetic calculations
...
---
type: fact
description: Join with customers table using yearmonth.customerid = customers.customerid
...
---
type: fact
description: For monthly aggregations, GROUP BY SUBSTR(date, 5, 2) for month grouping
...
---
type: sql_example
sql: "SELECT * FROM customers WHERE currency = 'EUR'"
description: Get customers by currency
...
---
type: sql_example
sql: "SELECT c.*, y.consumption FROM customers c JOIN yearmonth y ON c.customerid = y.customerid"
description: Join customers with consumption data
...
---
type: sql_example
sql: "SELECT country, COUNT(*) FROM gasstations WHERE segment = 'Discount' GROUP BY country"
description: Count discount stations by country
...
---
type: sql_example
sql: "SELECT SUM(CASE WHEN country = 'CZE' THEN 1 ELSE 0 END) - SUM(CASE WHEN country = 'SVK' THEN 1 ELSE 0 END) FROM gasstations WHERE segment = 'Discount'"
description: Calculate difference in discount stations between countries
...
---
type: sql_example
sql: "SELECT * FROM transactions_1k WHERE date = '2012-08-25'"
description: Get transactions by date
...
---
type: sql_example
sql: "SELECT t.* FROM transactions_1k t JOIN gasstations g ON t.gasstationid = g.gasstationid WHERE g.country = 'CZE'"
description: Get transactions in Czech Republic
...
---
type: sql_example
sql: "SELECT CAST(SUM(CASE WHEN c.currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / NULLIF(COUNT(t.customerid), 0) FROM transactions_1k t JOIN customers c ON t.customerid = c.customerid WHERE t.date = '2012-08-25'"
description: Calculate percentage of EUR customers on specific date
...
---
type: sql_example
sql: "SELECT * FROM yearmonth WHERE SUBSTR(date, 1, 4) = '2012'"
description: Filter by year 2012
...
---
type: sql_example
sql: "SELECT SUBSTR(date, 5, 2) as month, SUM(CAST(consumption AS float)) FROM yearmonth WHERE SUBSTR(date, 1, 4) = '2013' GROUP BY SUBSTR(date, 5, 2)"
description: Get consumption by month in 2013
...
---
type: sql_example
sql: "SELECT * FROM yearmonth WHERE date = '201309'"
description: Filter by specific month (September 2013)
...
---
type: sql_example
sql: "SELECT SUM(CASE WHEN c.currency = 'CZK' THEN CAST(y.consumption AS float) ELSE 0 END) - SUM(CASE WHEN c.currency = 'EUR' THEN CAST(y.consumption AS float) ELSE 0 END) FROM customers c JOIN yearmonth y ON c.customerid = y.customerid WHERE SUBSTR(y.date, 1, 4) = '2012'"
description: Calculate consumption difference by currency
...
---
type: fact
description: "IMPORTANT: Always use CAST(consumption AS float) for any arithmetic calculations"
...
---
type: fact
description: "yearmonth.date uses YYYYMM format: '201309' means September 2013"
...
---
type: fact
description: "Extract year with SUBSTR(date, 1, 4), month with SUBSTR(date, 5, 2)"
...
---
type: fact
description: "For date ranges in YYYYMM format, use BETWEEN '201301' AND '201312' for 2013"
...
---
type: fact
description: "Use COUNT(*) FILTER (WHERE condition) for PostgreSQL conditional counting"
...
---
type: fact
description: "For monthly aggregation, GROUP BY SUBSTR(date, 5, 2) and SUM consumption"
...
---
type: fact
description: "Join transactions_1k with yearmonth table only when customer-month data is needed"
...
---
type: fact
description: "For percentage calculations, remember to multiply by 100 for percentage format"
...
---
type: sql_example
sql: "SELECT SUBSTR(y.date, 5, 2) FROM customers c JOIN yearmonth y ON c.customerid = y.customerid WHERE SUBSTR(y.date, 1, 4) = '2013' AND c.segment = 'SME' GROUP BY SUBSTR(y.date, 5, 2) ORDER BY SUM(CAST(y.consumption AS float)) DESC LIMIT 1"
description: Find peak consumption month for segment
...
---
type: sql_example
sql: "SELECT COUNT(*) FILTER (WHERE country = 'CZE' AND segment = 'Discount') - COUNT(*) FILTER (WHERE country = 'SVK' AND segment = 'Discount') FROM gasstations"
description: Compare discount stations between countries
...
---
type: sql_example
sql: "SELECT (COUNT(DISTINCT c.customerid)::float / (SELECT COUNT(DISTINCT customerid) FROM customers WHERE segment = 'LAM')) * 100 FROM yearmonth y JOIN customers c ON y.customerid = c.customerid WHERE CAST(y.consumption AS float) > 46.73 AND c.segment = 'LAM'"
description: Calculate percentage of LAM customers with high consumption
...
---
type: sql_example
sql: "SELECT SUM(CAST(consumption AS float)) FROM yearmonth WHERE SUBSTR(date, 1, 4) = '2012' GROUP BY SUBSTR(date, 5, 2) ORDER BY SUM(CAST(consumption AS float)) DESC LIMIT 1"
description: Find highest monthly consumption total
...
---
type: sql_example
sql: "SELECT DISTINCT p.description FROM products p JOIN transactions_1k t ON p.productid = t.productid JOIN yearmonth y ON t.customerid = y.customerid WHERE y.date = '201309'"
description: Get products consumed in specific month
...
---
type: sql_example
sql: "SELECT DISTINCT g.country FROM gasstations g JOIN transactions_1k t ON g.gasstationid = t.gasstationid JOIN yearmonth y ON t.customerid = y.customerid WHERE y.date = '201306'"
description: Get countries with transactions in specific month
...
---
type: sql_example
sql: "SELECT COUNT(DISTINCT c.customerid) FROM customers c JOIN yearmonth y ON c.customerid = y.customerid WHERE c.currency = 'EUR' AND CAST(y.consumption AS float) > 1000"
description: Count EUR customers with high consumption
...
---
type: sql_example
sql: "SELECT CAST(SUM(CASE WHEN c.currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / NULLIF(COUNT(t.customerid), 0) FROM transactions_1k t JOIN customers c ON t.customerid = c.customerid WHERE t.date = '2012-08-25'"
description: Calculate percentage of EUR customers on specific date
...
